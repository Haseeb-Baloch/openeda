#!/usr/bin/perl
#####################################################################
#Copyright : Copyright (C) 2016 Parallella Foundation
#License   : MIT
#Author    : Andreas Olofsson
#####################################################################
#use strict
use Getopt::Long;
use File::Spec;
my $Usage =<<EOF;
======================================================================
Function   : Creates a Stabiesoft config file from a Synopsys TechFile
Usage      : tf2ss -tf <TechnologyFilee>                            
Example    : tf2ss -tf "blah.tf" > my.cfg
======================================================================
EOF
my $result =  GetOptions('tf:s');
if((!defined $opt_tf)){
  print "$Usage";               
  exit;
}   
$max=256;

@colormap=("mediumRed","salmon","aquamarine","lawnGreen","mediumBlue","deepPurple","darkPurple","lavenderBlush");

#Set Default Layer Numbers
for $i (0..($max-1)){
    $index=$i%8;
    $Map{$i}{"layer"}="x$i"; 
    $Map{$i}{"color"}=$colormap[$i%8];
    $Map{$i}{"pattern"}="lightDot"; 
}

#Reading in Layers (numbers + colors)
open(FILE,"$opt_tf");
while(<FILE>){
    if(/Layer\s+\"(\w+)\"/){
	$Layer=$1;
    }
    elsif(/layerNumber\s+\=\s*(\d+)/){
	$Number=$1;
	if($Number<$max){
	    $Map{$Number}{"layer"} = $Layer;
	}
    }
    # create color from tech file, need map
}

# Print out layers
foreach $i (sort { $a <=> $b } keys %Map) {
    print "edbTFCreateLayer $Map{$i}{\"layer\"} $i mask $Map{$i}{color} $Map{$i}{pattern} solid 0\n";
}

# Print out other default settings
print "
# Define all fonts, but 0 should always be font1000
# and 8 should be the same for schematic use
edbTFSetStartingFont 0 font1000
edbTFSetStartingFont 1 font1000
edbTFSetStartingFont 2 font1000
edbTFSetStartingFont 3 pgfontR10
edbTFSetStartingFont 4 font1000
edbTFSetStartingFont 5 font1000
edbTFSetStartingFont 6 font1000
edbTFSetStartingFont 7 font1000
edbTFSetStartingFont 8 font1000
edbTFSetStartingFont 9 font1000
edbTFSetStartingFont 10 font1000
edbTFSetStartingFont 11 font1000
edbTFSetStartingFont 12 font1000
edbTFSetStartingFont 13 font1000
edbTFSetStartingFont 14 font1000
edbTFSetStartingFont 15 font1000
# define a mask layout view and abstract view with
edbTFCreateView lay mask 1000  10 500 5
edbTFCreateView abs mask 1000  10 500 5
"
